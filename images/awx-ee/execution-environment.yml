---
version: 3

dependencies:
  ansible_core:
    package_pip: ansible-core==2.13.6
  ansible_runner:
    package_pip: ansible-runner
  galaxy: requirements.yml
  python: requirements.txt

images:
  base_image:
    name: python:3.10

additional_build_steps:
  # Source for those scripts are at https://github.com/ansible/ansible-builder/tree/devel/src/ansible_builder/_target_scripts
  prepend_base: []
  append_base: []

  prepend_final:
    - LABEL org.opencontainers.image.authors="Digital Victoria"
    - LABEL org.opencontainers.image.description="Provides an AWX execution environment image optimised for use with SDP."
    - LABEL org.opencontainers.image.source="https://github.com/dpc-sdp/bay/blob/5.x/images/awx-ee/context/Dockerfile"
    - ARG LAGOON_CLI_VERSION=v0.15.4
    - ARG NVM_INSTALL_VERSION=v0.39.1
    - ARG NODE_VERSION=v14.15.1

  append_final:
    - | # Required dependencies.
      RUN set -eux; \
          apt-get update && apt-get install -y \
              git git-lfs \
              jq \
              rsync \
              zip unzip; \
          rm -rf /var/lib/apt/lists/*;

    - | # Install php & composer.
      RUN set -eux; \
          curl -sSL https://packages.sury.org/php/README.txt | bash -x; \
          apt-get update && apt-get install -y \
              php8.1-cli \
              php8.1-gd \
              php8.1-zip; \
          rm -rf /var/lib/apt/lists/*;

    - | # Install cli tools.
      SHELL ["/bin/bash", "-c"]
      RUN set -eux; \
          arch_linux=$(uname -m) && arch_linux="${arch_linux/aarch64/arm64}" && arch_linux="${arch_linux/x86_64/amd64}"; \
          curl -LO "https://dl.k8s.io/release/v1.25.12/bin/linux/${arch_linux}/kubectl"; \
          chmod +x kubectl; \
          mv ./kubectl /usr/local/bin/kubectl;

    - RUN curl -L "https://github.com/uselagoon/lagoon-cli/releases/download/$LAGOON_CLI_VERSION/lagoon-cli-$LAGOON_CLI_VERSION-linux-amd64" -o /usr/local/bin/lagoon
    - RUN chmod +x /usr/local/bin/lagoon
    - RUN curl -L "https://github.com/github/hub/releases/download/v2.14.2/hub-linux-amd64-2.14.2.tgz" -o /tmp/hub && tar -xvf /tmp/hub -C /tmp && mv /tmp/hub-linux-amd64-2.14.2/bin/hub /usr/local/bin
    - RUN chmod +x /usr/local/bin/hub
    - RUN lagoon config feature --enable-local-dir-check false --force
    - RUN curl -sS https://getcomposer.org/download/2.3.7/composer.phar --output composer.phar
    - RUN chmod +x composer.phar
    - RUN mv composer.phar /usr/local/bin/composer
    - RUN composer global require szeidler/composer-patches-cli:^1.0
    - RUN curl -L https://github.com/itchyny/gojq/releases/download/v0.12.4/gojq_v0.12.4_linux_amd64.tar.gz --output /tmp/gojq_v0.12.4_linux_amd64.tar.gz
    - RUN tar -C /tmp -xvf /tmp/gojq_v0.12.4_linux_amd64.tar.gz
    - RUN chmod +x /tmp/gojq_v0.12.4_linux_amd64/gojq
    - RUN mv /tmp/gojq_v0.12.4_linux_amd64/gojq /usr/local/bin
    - RUN touch $HOME/.bashrc && chmod +x $HOME/.bashrc
    - RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_INSTALL_VERSION/install.sh | bash
    - RUN curl -L "https://get.helm.sh/helm-v3.12.2-linux-amd64.tar.gz" -o /tmp/helm && tar -xvf /tmp/helm -C /tmp && mv /tmp/linux-amd64/helm /usr/local/bin
    - RUN chmod +x /usr/local/bin/helm
    - RUN curl -L https://github.com/google/yamlfmt/releases/download/v0.10.0/yamlfmt_0.10.0_Linux_x86_64.tar.gz --output /tmp/yamlfmt_0.10.0_Linux_x86_64.tar.gz
    - RUN tar -C /tmp -xvf /tmp/yamlfmt_0.10.0_Linux_x86_64.tar.gz
    - RUN chmod +x /tmp/yamlfmt
    - RUN mv /tmp/yamlfmt /usr/local/bin